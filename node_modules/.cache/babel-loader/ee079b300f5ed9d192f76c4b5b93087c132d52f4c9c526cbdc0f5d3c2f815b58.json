{"ast":null,"code":"\n// import React, { useState } from 'react';\n// import './UserTable.css'; // CSS file for user table styling\n\n// const UserTable = ({ users, heading }) => {\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const usersPerPage = 5;\n\n//   // Filter users based on the search term\n//   const filteredUsers = users.filter((user) =>\n//     user.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n\n//   // Calculate the total number of pages\n//   const totalPages = Math.ceil(filteredUsers.length / usersPerPage);\n\n//   // Get the users for the current page\n//   const currentUsers = filteredUsers.slice(\n//     (currentPage - 1) * usersPerPage,\n//     currentPage * usersPerPage\n//   );\n\n//   const handleSearch = (e) => {\n//     setSearchTerm(e.target.value);\n//     setCurrentPage(1); // Reset to first page when search term changes\n//   };\n\n//   const handlePageChange = (pageNumber) => {\n//     setCurrentPage(pageNumber);\n//   };\n\n//   return (\n//     <div className=\"user-table-container\">\n//       <div className=\"header\">\n//         <h2>{heading}</h2> {/* Dynamic heading */}\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search by name\"\n//           value={searchTerm}\n//           onChange={handleSearch}\n//           className=\"search-bar\"\n//         />\n//       </div>\n//       <table className=\"user-table\">\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Email</th>\n//             <th>Number</th>\n//             <th>Profession</th>\n//             <th>Status</th>\n//             <th>Role</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {currentUsers.map((user, index) => (\n//             <tr key={index}>\n//               <td>{user.name}</td>\n//               <td>{user.email}</td>\n//               <td>{user.number}</td>\n//               <td>{user.profession}</td>\n//               <td>{user.status}</td>\n//               <td>{user.role}</td>\n//               <td>\n//                 <button className=\"deactivate-btn\">Deactivate</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       <div className=\"pagination\">\n//         {Array.from({ length: totalPages }, (_, index) => (\n//           <button\n//             key={index}\n//             onClick={() => handlePageChange(index + 1)}\n//             className={index + 1 === currentPage ? 'active' : ''}\n//           >\n//             {index + 1}\n//           </button>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default UserTable;","map":{"version":3,"names":[],"sources":["C:/Users/Switch/Desktop/admin-dashboard/src/components/UserTable.js"],"sourcesContent":["\r\n// import React, { useState } from 'react';\r\n// import './UserTable.css'; // CSS file for user table styling\r\n\r\n// const UserTable = ({ users, heading }) => {\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const usersPerPage = 5;\r\n\r\n//   // Filter users based on the search term\r\n//   const filteredUsers = users.filter((user) =>\r\n//     user.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n//   );\r\n\r\n//   // Calculate the total number of pages\r\n//   const totalPages = Math.ceil(filteredUsers.length / usersPerPage);\r\n\r\n//   // Get the users for the current page\r\n//   const currentUsers = filteredUsers.slice(\r\n//     (currentPage - 1) * usersPerPage,\r\n//     currentPage * usersPerPage\r\n//   );\r\n\r\n//   const handleSearch = (e) => {\r\n//     setSearchTerm(e.target.value);\r\n//     setCurrentPage(1); // Reset to first page when search term changes\r\n//   };\r\n\r\n//   const handlePageChange = (pageNumber) => {\r\n//     setCurrentPage(pageNumber);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"user-table-container\">\r\n//       <div className=\"header\">\r\n//         <h2>{heading}</h2> {/* Dynamic heading */}\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Search by name\"\r\n//           value={searchTerm}\r\n//           onChange={handleSearch}\r\n//           className=\"search-bar\"\r\n//         />\r\n//       </div>\r\n//       <table className=\"user-table\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Name</th>\r\n//             <th>Email</th>\r\n//             <th>Number</th>\r\n//             <th>Profession</th>\r\n//             <th>Status</th>\r\n//             <th>Role</th>\r\n//             <th>Action</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {currentUsers.map((user, index) => (\r\n//             <tr key={index}>\r\n//               <td>{user.name}</td>\r\n//               <td>{user.email}</td>\r\n//               <td>{user.number}</td>\r\n//               <td>{user.profession}</td>\r\n//               <td>{user.status}</td>\r\n//               <td>{user.role}</td>\r\n//               <td>\r\n//                 <button className=\"deactivate-btn\">Deactivate</button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//       <div className=\"pagination\">\r\n//         {Array.from({ length: totalPages }, (_, index) => (\r\n//           <button\r\n//             key={index}\r\n//             onClick={() => handlePageChange(index + 1)}\r\n//             className={index + 1 === currentPage ? 'active' : ''}\r\n//           >\r\n//             {index + 1}\r\n//           </button>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UserTable;\r\n"],"mappings":";AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}