{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Switch\\\\Desktop\\\\admin-dashboard\\\\src\\\\components\\\\PaymentsTable.js\",\n  _s = $RefreshSig$();\n// // export default UserTable;\n// import React, { useState } from 'react';\n// import './PaymentsTable.css'; // CSS file for user table styling\n\n// const PaymentsTable = ({ users, heading, buttonLabel }) => {\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const usersPerPage = 5;\n\n//   // Filter users based on the search term\n//   const filteredUsers = users.filter((user) =>\n//     user.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n\n//   // Calculate the total number of pages\n//   const totalPages = Math.ceil(filteredUsers.length / usersPerPage);\n\n//   // Get the users for the current page\n//   const currentUsers = filteredUsers.slice(\n//     (currentPage - 1) * usersPerPage,\n//     currentPage * usersPerPage\n//   );\n\n//   const handleSearch = (e) => {\n//     setSearchTerm(e.target.value);\n//     setCurrentPage(1); // Reset to first page when search term changes\n//   };\n\n//   const handlePageChange = (pageNumber) => {\n//     setCurrentPage(pageNumber);\n//   };\n\n//   return (\n//     <div className=\"user-table-container\">\n//       <div className=\"header\">\n//         <h2>{heading}</h2> {/* Dynamic heading */}\n//         {/* <input\n//           type=\"text\"\n//           placeholder=\"Search by name\"\n//           value={searchTerm}\n//           onChange={handleSearch}\n//           className=\"search-bar\"\n//         /> */}\n//       </div>\n//       <table className=\"user-table\">\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Number</th>\n//             <th>Role</th>\n//             <th>Available Balance</th>\n\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {currentUsers.map((user, index) => (\n//             <tr key={index}>\n//               <td>{user.name}</td>\n//               <td>{user.number}</td>\n//               <td>{user.role}</td>\n//               <td>{user.balance}</td>\n\n//                 {/* <button className={buttonLabel === 'Activate' ? 'activate-btn' : 'deactivate-btn'}>\n//                   {buttonLabel}\n//                 </button> */}\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       <div className=\"pagination\">\n//         {Array.from({ length: totalPages }, (_, index) => (\n//           <button\n//             key={index}\n//             onClick={() => handlePageChange(index + 1)}\n//             className={index + 1 === currentPage ? 'active' : ''}\n//           >\n//             {index + 1}\n//           </button>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default PaymentsTable;\nimport React, { useState } from 'react';\nimport './PaymentsTable.css'; // CSS file for user table styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentsTable = ({\n  users = [],\n  heading,\n  buttonLabel\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const usersPerPage = 5;\n\n  // Filter users based on the search term\n  const filteredUsers = users.filter(user => user.name.toLowerCase().includes(searchTerm.toLowerCase()));\n\n  // Calculate the total number of pages\n  const totalPages = Math.ceil(filteredUsers.length / usersPerPage);\n\n  // Get the users for the current page\n  const currentUsers = filteredUsers.slice((currentPage - 1) * usersPerPage, currentPage * usersPerPage);\n  const handleSearch = e => {\n    setSearchTerm(e.target.value);\n    setCurrentPage(1); // Reset to first page when search term changes\n  };\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by name\",\n        value: searchTerm,\n        onChange: handleSearch,\n        className: \"search-bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"user-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Available Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentUsers.length > 0 ? currentUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.phoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.availableBalance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this), \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"4\",\n            children: \"No data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: Array.from({\n        length: totalPages\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(index + 1),\n        className: index + 1 === currentPage ? 'active' : '',\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentsTable, \"dGgBH5XEzYJTVyBHEFzq+fSbN2M=\");\n_c = PaymentsTable;\nexport default PaymentsTable;\nvar _c;\n$RefreshReg$(_c, \"PaymentsTable\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PaymentsTable","users","heading","buttonLabel","_s","searchTerm","setSearchTerm","currentPage","setCurrentPage","usersPerPage","filteredUsers","filter","user","name","toLowerCase","includes","totalPages","Math","ceil","length","currentUsers","slice","handleSearch","e","target","value","handlePageChange","pageNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","map","index","phoneNumber","role","availableBalance","colSpan","Array","from","_","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Switch/Desktop/admin-dashboard/src/components/PaymentsTable.js"],"sourcesContent":["// // export default UserTable;\r\n// import React, { useState } from 'react';\r\n// import './PaymentsTable.css'; // CSS file for user table styling\r\n\r\n// const PaymentsTable = ({ users, heading, buttonLabel }) => {\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const usersPerPage = 5;\r\n\r\n//   // Filter users based on the search term\r\n//   const filteredUsers = users.filter((user) =>\r\n//     user.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n//   );\r\n\r\n//   // Calculate the total number of pages\r\n//   const totalPages = Math.ceil(filteredUsers.length / usersPerPage);\r\n\r\n//   // Get the users for the current page\r\n//   const currentUsers = filteredUsers.slice(\r\n//     (currentPage - 1) * usersPerPage,\r\n//     currentPage * usersPerPage\r\n//   );\r\n\r\n//   const handleSearch = (e) => {\r\n//     setSearchTerm(e.target.value);\r\n//     setCurrentPage(1); // Reset to first page when search term changes\r\n//   };\r\n\r\n//   const handlePageChange = (pageNumber) => {\r\n//     setCurrentPage(pageNumber);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"user-table-container\">\r\n//       <div className=\"header\">\r\n//         <h2>{heading}</h2> {/* Dynamic heading */}\r\n//         {/* <input\r\n//           type=\"text\"\r\n//           placeholder=\"Search by name\"\r\n//           value={searchTerm}\r\n//           onChange={handleSearch}\r\n//           className=\"search-bar\"\r\n//         /> */}\r\n//       </div>\r\n//       <table className=\"user-table\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Name</th>\r\n//             <th>Number</th>\r\n//             <th>Role</th>\r\n//             <th>Available Balance</th>\r\n\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {currentUsers.map((user, index) => (\r\n//             <tr key={index}>\r\n//               <td>{user.name}</td>\r\n//               <td>{user.number}</td>\r\n//               <td>{user.role}</td>\r\n//               <td>{user.balance}</td>\r\n\r\n//                 {/* <button className={buttonLabel === 'Activate' ? 'activate-btn' : 'deactivate-btn'}>\r\n//                   {buttonLabel}\r\n//                 </button> */}\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//       <div className=\"pagination\">\r\n//         {Array.from({ length: totalPages }, (_, index) => (\r\n//           <button\r\n//             key={index}\r\n//             onClick={() => handlePageChange(index + 1)}\r\n//             className={index + 1 === currentPage ? 'active' : ''}\r\n//           >\r\n//             {index + 1}\r\n//           </button>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default PaymentsTable;\r\nimport React, { useState } from 'react';\r\nimport './PaymentsTable.css'; // CSS file for user table styling\r\n\r\nconst PaymentsTable = ({ users = [], heading, buttonLabel }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const usersPerPage = 5;\r\n\r\n  // Filter users based on the search term\r\n  const filteredUsers = users.filter((user) =>\r\n    user.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  // Calculate the total number of pages\r\n  const totalPages = Math.ceil(filteredUsers.length / usersPerPage);\r\n\r\n  // Get the users for the current page\r\n  const currentUsers = filteredUsers.slice(\r\n    (currentPage - 1) * usersPerPage,\r\n    currentPage * usersPerPage\r\n  );\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchTerm(e.target.value);\r\n    setCurrentPage(1); // Reset to first page when search term changes\r\n  };\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-table-container\">\r\n      <div className=\"header\">\r\n        <h2>{heading}</h2> {/* Dynamic heading */}\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by name\"\r\n          value={searchTerm}\r\n          onChange={handleSearch}\r\n          className=\"search-bar\"\r\n        />\r\n      </div>\r\n      <table className=\"user-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Number</th>\r\n            <th>Role</th>\r\n            <th>Available Balance</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currentUsers.length > 0 ? (\r\n            currentUsers.map((user, index) => (\r\n              <tr key={index}>\r\n                <td>{user.name}</td>\r\n                <td>{user.phoneNumber}</td> {/* Adjust field names based on your data */}\r\n                <td>{user.role}</td>\r\n                <td>{user.availableBalance}</td> {/* Adjust field names based on your data */}\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"4\">No data available</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      {totalPages > 1 && (\r\n        <div className=\"pagination\">\r\n          {Array.from({ length: totalPages }, (_, index) => (\r\n            <button\r\n              key={index}\r\n              onClick={() => handlePageChange(index + 1)}\r\n              className={index + 1 === currentPage ? 'active' : ''}\r\n            >\r\n              {index + 1}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentsTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}