{"ast":null,"code":"// export default Payments;\nimport React,{useState,useEffect}from'react';import Sidebar from'../components/sidebar';import StatCard from'../components/statcard';import PaymentsTable from'../components/PaymentsTable';import'./Services.css';// Optional CSS file for services styling\nimport'./Dashboard.css';// Assuming this CSS file contains styles for stat cards, etc.\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Payments=()=>{const[payments,setPayments]=useState([]);// State to store payments data\nconst[loading,setLoading]=useState(true);// State to manage loading status\nconst[inactiveUsersCount,setInactiveUsersCount]=useState(0);const[consultantsCount,setConsultantsCount]=useState(0);const[customersCount,setCustomersCount]=useState(0);const[totalActiveUsers,setTotalActiveUsers]=useState(0);const fetchPayments=async()=>{try{const response=await fetch('https://bridechila-apis-2.onrender.com/usersWithBalance');const data=await response.json();setPayments(data);// Adjust according to your API response\nsetLoading(false);// Stop loading\n}catch(error){console.error(\"Error fetching payments:\",error);setLoading(false);// Stop loading even if there's an error\n}};const fetchTotals=async()=>{try{const responses=await Promise.all([fetch('https://bridechila-apis-2.onrender.com/totalActiveUsers'),fetch('https://bridechila-apis-2.onrender.com/totalInactiveUsers'),fetch('https://bridechila-apis-2.onrender.com/totalConsultants'),fetch('https://bridechila-apis-2.onrender.com/totalCustomers')]);const[activeData,inactiveData,consultantsData,customersData]=await Promise.all(responses.map(response=>response.json()));setTotalActiveUsers(activeData.totalActiveUsers);setInactiveUsersCount(inactiveData.totalInactiveUsers);setConsultantsCount(consultantsData.totalConsultants);setCustomersCount(customersData.totalCustomers);}catch(error){console.error('Error fetching totals:',error);}};useEffect(()=>{fetchPayments();fetchTotals();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"services\",children:[/*#__PURE__*/_jsx(Sidebar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-cards\",children:[/*#__PURE__*/_jsx(StatCard,{title:\"Total Active Users\",value:totalActiveUsers}),/*#__PURE__*/_jsx(StatCard,{title:\"Total Inactive Users\",value:inactiveUsersCount}),/*#__PURE__*/_jsx(StatCard,{title:\"Total Consultants\",value:consultantsCount}),/*#__PURE__*/_jsx(StatCard,{title:\"Total Customers\",value:customersCount})]}),loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading payments...\"}):/*#__PURE__*/_jsx(PaymentsTable,{users:payments,heading:\"All Payments\",buttonLabel:\"Deactivate\"})]})]});};export default Payments;","map":{"version":3,"names":["React","useState","useEffect","Sidebar","StatCard","PaymentsTable","jsx","_jsx","jsxs","_jsxs","Payments","payments","setPayments","loading","setLoading","inactiveUsersCount","setInactiveUsersCount","consultantsCount","setConsultantsCount","customersCount","setCustomersCount","totalActiveUsers","setTotalActiveUsers","fetchPayments","response","fetch","data","json","error","console","fetchTotals","responses","Promise","all","activeData","inactiveData","consultantsData","customersData","map","totalInactiveUsers","totalConsultants","totalCustomers","className","children","title","value","users","heading","buttonLabel"],"sources":["D:/My tasks/admin-dashboard/src/pages/Payments.js"],"sourcesContent":["// export default Payments;\r\nimport React, { useState, useEffect } from 'react';\r\nimport Sidebar from '../components/sidebar';\r\nimport StatCard from '../components/statcard';\r\nimport PaymentsTable from '../components/PaymentsTable';\r\nimport './Services.css'; // Optional CSS file for services styling\r\nimport './Dashboard.css'; // Assuming this CSS file contains styles for stat cards, etc.\r\n\r\nconst Payments = () => {\r\n  const [payments, setPayments] = useState([]); // State to store payments data\r\n  const [loading, setLoading] = useState(true); // State to manage loading status\r\n  const [inactiveUsersCount, setInactiveUsersCount] = useState(0);\r\n  const [consultantsCount, setConsultantsCount] = useState(0);\r\n  const [customersCount, setCustomersCount] = useState(0);\r\n  const [totalActiveUsers, setTotalActiveUsers] = useState(0);\r\n  const fetchPayments = async () => {\r\n    try {\r\n      const response = await fetch('https://bridechila-apis-2.onrender.com/usersWithBalance');\r\n      const data = await response.json();\r\n      setPayments(data); // Adjust according to your API response\r\n      setLoading(false); // Stop loading\r\n    } catch (error) {\r\n      console.error(\"Error fetching payments:\", error);\r\n      setLoading(false); // Stop loading even if there's an error\r\n    }\r\n  };\r\n  const fetchTotals = async () => {\r\n    try {\r\n      const responses = await Promise.all([\r\n        fetch('https://bridechila-apis-2.onrender.com/totalActiveUsers'),\r\n        fetch('https://bridechila-apis-2.onrender.com/totalInactiveUsers'),\r\n        fetch('https://bridechila-apis-2.onrender.com/totalConsultants'),\r\n        fetch('https://bridechila-apis-2.onrender.com/totalCustomers')\r\n      ]);\r\n\r\n      const [activeData, inactiveData, consultantsData, customersData] = await Promise.all(\r\n        responses.map(response => response.json())\r\n      );\r\n\r\n      setTotalActiveUsers(activeData.totalActiveUsers);\r\n      setInactiveUsersCount(inactiveData.totalInactiveUsers);\r\n      setConsultantsCount(consultantsData.totalConsultants);\r\n      setCustomersCount(customersData.totalCustomers);\r\n    } catch (error) {\r\n      console.error('Error fetching totals:', error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchPayments();\r\n    fetchTotals();\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"services\">\r\n      <Sidebar />\r\n      <div className=\"content\">\r\n      <div className=\"stat-cards\">\r\n          <StatCard title=\"Total Active Users\" value={totalActiveUsers} />\r\n          <StatCard title=\"Total Inactive Users\" value={inactiveUsersCount} />\r\n          <StatCard title=\"Total Consultants\" value={consultantsCount} />\r\n          <StatCard title=\"Total Customers\" value={customersCount} />\r\n        </div>\r\n        {loading ? (\r\n          <p>Loading payments...</p>\r\n        ) : (\r\n          <PaymentsTable\r\n            users={payments}\r\n            heading=\"All Payments\"\r\n            buttonLabel=\"Deactivate\"\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payments;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}