{"ast":null,"code":"var _jsxFileName = \"D:\\\\My tasks\\\\admin-dashboard\\\\src\\\\pages\\\\Services.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import Sidebar from '../components/sidebar';\n// import StatCard from '../components/statcard';\n// import ServicesTable from '../components/ServicesTable';\n// import './Services.css'; // Optional CSS file for services styling\n// import './Dashboard.css'; // Assuming this CSS file contains styles for stat cards, etc.\n\n// const Services = () => {\n\n//   const sampleUsers = [\n//     { name: 'Service 1', description: 'Description 1', users: '123', consultants: '15' },\n//     { name: 'Service 2', description: 'Description 2', users: '456', consultants: '10' },\n//     { name: 'Service 3', description: 'Description 3', users: '789', consultants: '8' },\n//     // Add more sample user data as needed\n//   ];\n\n//   return (\n//     <div className=\"services\">\n//       <Sidebar />\n//       <div className=\"content\">\n//         <div className=\"stat-cards\">\n//           <StatCard title=\"Total Active Users\" value=\"1,234\" />\n//           <StatCard title=\"Total Inactive Users\" value=\"5,353\" />\n//           <StatCard title=\"Total Consultants\" value=\"1,232\" />\n//           <StatCard title=\"Total Customers\" value=\"1,243\" />\n//         </div>\n//         <ServicesTable \n//           users={sampleUsers} \n//           heading=\"All Services\" \n//           buttonLabel=\"Deactivate\" // Update as needed\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Services;\nimport React, { useState, useEffect } from 'react';\nimport Sidebar from '../components/sidebar';\nimport StatCard from '../components/statcard';\nimport ServicesTable from '../components/ServicesTable';\nimport './Services.css'; // Optional CSS file for services styling\nimport './Dashboard.css'; // Assuming this CSS file contains styles for stat cards, etc.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Services = () => {\n  _s();\n  const [inactiveUsersCount, setInactiveUsersCount] = useState(0);\n  const [consultantsCount, setConsultantsCount] = useState(0);\n  const [customersCount, setCustomersCount] = useState(0);\n  const [totalActiveUsers, setTotalActiveUsers] = useState(0);\n\n  // Static dummy data for services\n  const services = [{\n    name: 'Service 1',\n    description: 'Description 1',\n    users: '123',\n    consultants: '15'\n  }, {\n    name: 'Service 2',\n    description: 'Description 2',\n    users: '456',\n    consultants: '10'\n  }, {\n    name: 'Service 3',\n    description: 'Description 3',\n    users: '789',\n    consultants: '8'\n  }\n  // Add more dummy service data as needed\n  ];\n  const fetchTotals = async () => {\n    try {\n      const responses = await Promise.all([fetch('http://localhost:3000/totalActiveUsers'), fetch('http://localhost:3000/totalInactiveUsers'), fetch('http://localhost:3000/totalConsultants'), fetch('http://localhost:3000/totalCustomers')]);\n      const [activeData, inactiveData, consultantsData, customersData] = await Promise.all(responses.map(response => response.json()));\n      setTotalActiveUsers(activeData.totalActiveUsers);\n      setInactiveUsersCount(inactiveData.totalInactiveUsers);\n      setConsultantsCount(consultantsData.totalConsultants);\n      setCustomersCount(customersData.totalCustomers);\n    } catch (error) {\n      console.error('Error fetching totals:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTotals();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"services\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-cards\",\n        children: [/*#__PURE__*/_jsxDEV(StatCard, {\n          title: \"Total Active Users\",\n          value: totalActiveUsers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n          title: \"Total Inactive Users\",\n          value: inactiveUsersCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n          title: \"Total Consultants\",\n          value: consultantsCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n          title: \"Total Customers\",\n          value: customersCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ServicesTable, {\n        users: services,\n        heading: \"All Services\",\n        buttonLabel: \"Deactivate\" // Update as needed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Services, \"i/QzmCh4d42JoQkEirI3wlnhf0g=\");\n_c = Services;\nexport default Services;\nvar _c;\n$RefreshReg$(_c, \"Services\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","StatCard","ServicesTable","jsxDEV","_jsxDEV","Services","_s","inactiveUsersCount","setInactiveUsersCount","consultantsCount","setConsultantsCount","customersCount","setCustomersCount","totalActiveUsers","setTotalActiveUsers","services","name","description","users","consultants","fetchTotals","responses","Promise","all","fetch","activeData","inactiveData","consultantsData","customersData","map","response","json","totalInactiveUsers","totalConsultants","totalCustomers","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","value","heading","buttonLabel","_c","$RefreshReg$"],"sources":["D:/My tasks/admin-dashboard/src/pages/Services.js"],"sourcesContent":["// import React from 'react';\r\n// import Sidebar from '../components/sidebar';\r\n// import StatCard from '../components/statcard';\r\n// import ServicesTable from '../components/ServicesTable';\r\n// import './Services.css'; // Optional CSS file for services styling\r\n// import './Dashboard.css'; // Assuming this CSS file contains styles for stat cards, etc.\r\n\r\n// const Services = () => {\r\n  \r\n//   const sampleUsers = [\r\n//     { name: 'Service 1', description: 'Description 1', users: '123', consultants: '15' },\r\n//     { name: 'Service 2', description: 'Description 2', users: '456', consultants: '10' },\r\n//     { name: 'Service 3', description: 'Description 3', users: '789', consultants: '8' },\r\n//     // Add more sample user data as needed\r\n//   ];\r\n\r\n//   return (\r\n//     <div className=\"services\">\r\n//       <Sidebar />\r\n//       <div className=\"content\">\r\n//         <div className=\"stat-cards\">\r\n//           <StatCard title=\"Total Active Users\" value=\"1,234\" />\r\n//           <StatCard title=\"Total Inactive Users\" value=\"5,353\" />\r\n//           <StatCard title=\"Total Consultants\" value=\"1,232\" />\r\n//           <StatCard title=\"Total Customers\" value=\"1,243\" />\r\n//         </div>\r\n//         <ServicesTable \r\n//           users={sampleUsers} \r\n//           heading=\"All Services\" \r\n//           buttonLabel=\"Deactivate\" // Update as needed\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Services;\r\nimport React, { useState, useEffect } from 'react';\r\nimport Sidebar from '../components/sidebar';\r\nimport StatCard from '../components/statcard';\r\nimport ServicesTable from '../components/ServicesTable';\r\nimport './Services.css'; // Optional CSS file for services styling\r\nimport './Dashboard.css'; // Assuming this CSS file contains styles for stat cards, etc.\r\n\r\nconst Services = () => {\r\n  const [inactiveUsersCount, setInactiveUsersCount] = useState(0);\r\n  const [consultantsCount, setConsultantsCount] = useState(0);\r\n  const [customersCount, setCustomersCount] = useState(0);\r\n  const [totalActiveUsers, setTotalActiveUsers] = useState(0);\r\n\r\n  // Static dummy data for services\r\n  const services = [\r\n    { name: 'Service 1', description: 'Description 1', users: '123', consultants: '15' },\r\n    { name: 'Service 2', description: 'Description 2', users: '456', consultants: '10' },\r\n    { name: 'Service 3', description: 'Description 3', users: '789', consultants: '8' },\r\n    // Add more dummy service data as needed\r\n  ];\r\n\r\n  const fetchTotals = async () => {\r\n    try {\r\n      const responses = await Promise.all([\r\n        fetch('http://localhost:3000/totalActiveUsers'),\r\n        fetch('http://localhost:3000/totalInactiveUsers'),\r\n        fetch('http://localhost:3000/totalConsultants'),\r\n        fetch('http://localhost:3000/totalCustomers')\r\n      ]);\r\n\r\n      const [activeData, inactiveData, consultantsData, customersData] = await Promise.all(\r\n        responses.map(response => response.json())\r\n      );\r\n\r\n      setTotalActiveUsers(activeData.totalActiveUsers);\r\n      setInactiveUsersCount(inactiveData.totalInactiveUsers);\r\n      setConsultantsCount(consultantsData.totalConsultants);\r\n      setCustomersCount(customersData.totalCustomers);\r\n    } catch (error) {\r\n      console.error('Error fetching totals:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTotals();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"services\">\r\n      <Sidebar />\r\n      <div className=\"content\">\r\n        <div className=\"stat-cards\">\r\n          <StatCard title=\"Total Active Users\" value={totalActiveUsers} />\r\n          <StatCard title=\"Total Inactive Users\" value={inactiveUsersCount} />\r\n          <StatCard title=\"Total Consultants\" value={consultantsCount} />\r\n          <StatCard title=\"Total Customers\" value={customersCount} />\r\n        </div>\r\n        <ServicesTable \r\n          users={services} \r\n          heading=\"All Services\" \r\n          buttonLabel=\"Deactivate\" // Update as needed\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Services;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}