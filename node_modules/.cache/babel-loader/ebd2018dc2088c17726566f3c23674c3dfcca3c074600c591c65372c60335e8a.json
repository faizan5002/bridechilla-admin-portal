{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Switch\\\\Desktop\\\\admin-dashboard\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import Sidebar from '../components/sidebar';\n// import StatCard from '../components/statcard';\n// import UserTable from '../components/UserTable';\n// import './Dashboard.css'; // CSS file for dashboard styling\n\n// const Dashboard = () => {\n//   const [currentView, setCurrentView] = useState('Active Users');\n//   const [users, setUsers] = useState([]);\n//   const [inactiveUsersCount, setInactiveUsersCount] = useState(0);\n//   const [consultantsCount, setConsultantsCount] = useState(0);\n//   const [customersCount, setCustomersCount] = useState(0);\n//   const [totalActiveUsers, setTotalActiveUsers] = useState(0);\n\n//   useEffect(() => {\n//     const fetchActiveAccounts = async () => {\n//       try {\n//         const response = await fetch('http://localhost:3000/activeAccounts');\n//         const data = await response.json();\n//         const formattedUsers = data\n//           .filter(user => user.conAccApproved)\n//           .map(user => ({\n//             name: user.name,\n//             email: user.email,\n//             number: user.phoneNumber,\n//             profession: user.profession || 'N/A',\n//             status: user.conAccApproved ? 'Active' : 'Inactive',\n//             role: user.role,\n//           }));\n\n//         setUsers(formattedUsers);\n//       } catch (error) {\n//         console.error('Error fetching active accounts:', error);\n//       }\n//     };\n\n//     const fetchTotals = async () => {\n//       try {\n//         const responses = await Promise.all([\n//           fetch('http://localhost:3000/totalActiveUsers'),\n//           fetch('http://localhost:3000/totalInactiveUsers'),\n//           fetch('http://localhost:3000/totalConsultants'),\n//           fetch('http://localhost:3000/totalCustomers')\n//         ]);\n\n//         const [activeData, inactiveData, consultantsData, customersData] = await Promise.all(\n//           responses.map(response => response.json())\n//         );\n\n//         setTotalActiveUsers(activeData.totalActiveUsers);\n//         setInactiveUsersCount(inactiveData.totalInactiveUsers);\n//         setConsultantsCount(consultantsData.totalConsultants);\n//         setCustomersCount(customersData.totalCustomers);\n//       } catch (error) {\n//         console.error('Error fetching totals:', error);\n//       }\n//     };\n\n//     fetchActiveAccounts();\n//     fetchTotals();\n//   }, [currentView]);\n\n//   const handleViewChange = (view) => {\n//     setCurrentView(view);\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       <Sidebar onMenuClick={handleViewChange} />\n//       <div className=\"content\">\n//         <div className=\"stat-cards\">\n//           <StatCard title=\"Total Active Users\" value={totalActiveUsers} />\n//           <StatCard title=\"Total Inactive Users\" value={inactiveUsersCount} />\n//           <StatCard title=\"Total Consultants\" value={consultantsCount} />\n//           <StatCard title=\"Total Customers\" value={customersCount} />\n//         </div>\n//         <UserTable \n//           users={users} \n//           heading={\n//             currentView === 'Consultants' \n//               ? 'All Consultants' \n//               : currentView === 'Inactive Users' \n//                 ? 'All Inactive Users' \n//                 : 'All Active Users'\n//           }\n//           buttonLabel={\n//             currentView === 'Inactive Users' \n//               ? 'Activate' \n//               : 'Deactivate'\n//           }\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useState, useEffect } from 'react';\nimport Sidebar from '../components/sidebar';\nimport StatCard from '../components/statcard';\nimport UserTable from '../components/UserTable';\nimport './Dashboard.css'; // CSS file for dashboard styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [currentView, setCurrentView] = useState('Active Users');\n  const [users, setUsers] = useState([]);\n  const [inactiveUsersCount, setInactiveUsersCount] = useState(0);\n  const [consultantsCount, setConsultantsCount] = useState(0);\n  const [customersCount, setCustomersCount] = useState(0);\n  const [totalActiveUsers, setTotalActiveUsers] = useState(0);\n  useEffect(() => {\n    const fetchActiveAccounts = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/activeAccounts');\n        const data = await response.json();\n        const formattedUsers = data.filter(user => user.conAccApproved).map(user => ({\n          id: user.id,\n          // Ensure user ID is included\n          name: user.name,\n          email: user.email,\n          number: user.phoneNumber,\n          profession: user.profession || 'N/A',\n          status: user.conAccApproved ? 'Active' : 'Inactive',\n          role: user.role\n        }));\n        setUsers(formattedUsers);\n      } catch (error) {\n        console.error('Error fetching active accounts:', error);\n      }\n    };\n    const fetchTotals = async () => {\n      try {\n        const responses = await Promise.all([fetch('http://localhost:3000/totalActiveUsers'), fetch('http://localhost:3000/totalInactiveUsers'), fetch('http://localhost:3000/totalConsultants'), fetch('http://localhost:3000/totalCustomers')]);\n        const [activeData, inactiveData, consultantsData, customersData] = await Promise.all(responses.map(response => response.json()));\n        setTotalActiveUsers(activeData.totalActiveUsers);\n        setInactiveUsersCount(inactiveData.totalInactiveUsers);\n        setConsultantsCount(consultantsData.totalConsultants);\n        setCustomersCount(customersData.totalCustomers);\n      } catch (error) {\n        console.error('Error fetching totals:', error);\n      }\n    };\n    fetchActiveAccounts();\n    fetchTotals();\n  }, [currentView]);\n  const handleViewChange = view => {\n    setCurrentView(view);\n  };\n  const handleDeactivate = async Id => {\n    try {\n      await fetch(`http://localhost:3000/deactivate/${Id}`, {\n        method: 'PATCH' // Assuming POST request for deactivation\n      });\n      if (response.ok) {\n        alert('User activated successfully!');\n        // Optionally refetch users or update state\n        const updatedUsers = inactiveUsers.filter(user => user.id !== Id);\n        setInactiveUsers(updatedUsers);\n        // Optionally update totals\n      } else {\n        alert('Failed to activate user.');\n      }\n      // Optionally update the UI to reflect the change\n      setUsers(users.map(user => user.id === Id ? {\n        ...user,\n        status: 'Inactive'\n      } : user));\n    } catch (error) {\n      console.error('Error deactivating user:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onMenuClick: handleViewChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-cards\",\n        children: [/*#__PURE__*/_jsxDEV(StatCard, {\n          title: \"Total Active Users\",\n          value: totalActiveUsers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n          title: \"Total Inactive Users\",\n          value: inactiveUsersCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n          title: \"Total Consultants\",\n          value: consultantsCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n          title: \"Total Customers\",\n          value: customersCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserTable, {\n        users: users,\n        heading: currentView === 'Consultants' ? 'All Consultants' : currentView === 'Inactive Users' ? 'All Inactive Users' : 'All Active Users',\n        buttonLabel: currentView === 'Inactive Users' ? 'Activate' : 'Deactivate',\n        onButtonClick: handleDeactivate // Pass handleDeactivate to UserTable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"NmZJQnlfBxM4r/JfAc3sdYGtQHA=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","StatCard","UserTable","jsxDEV","_jsxDEV","Dashboard","_s","currentView","setCurrentView","users","setUsers","inactiveUsersCount","setInactiveUsersCount","consultantsCount","setConsultantsCount","customersCount","setCustomersCount","totalActiveUsers","setTotalActiveUsers","fetchActiveAccounts","response","fetch","data","json","formattedUsers","filter","user","conAccApproved","map","id","name","email","number","phoneNumber","profession","status","role","error","console","fetchTotals","responses","Promise","all","activeData","inactiveData","consultantsData","customersData","totalInactiveUsers","totalConsultants","totalCustomers","handleViewChange","view","handleDeactivate","Id","method","ok","alert","updatedUsers","inactiveUsers","setInactiveUsers","className","children","onMenuClick","fileName","_jsxFileName","lineNumber","columnNumber","title","value","heading","buttonLabel","onButtonClick","_c","$RefreshReg$"],"sources":["C:/Users/Switch/Desktop/admin-dashboard/src/pages/Dashboard.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import Sidebar from '../components/sidebar';\r\n// import StatCard from '../components/statcard';\r\n// import UserTable from '../components/UserTable';\r\n// import './Dashboard.css'; // CSS file for dashboard styling\r\n\r\n// const Dashboard = () => {\r\n//   const [currentView, setCurrentView] = useState('Active Users');\r\n//   const [users, setUsers] = useState([]);\r\n//   const [inactiveUsersCount, setInactiveUsersCount] = useState(0);\r\n//   const [consultantsCount, setConsultantsCount] = useState(0);\r\n//   const [customersCount, setCustomersCount] = useState(0);\r\n//   const [totalActiveUsers, setTotalActiveUsers] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     const fetchActiveAccounts = async () => {\r\n//       try {\r\n//         const response = await fetch('http://localhost:3000/activeAccounts');\r\n//         const data = await response.json();\r\n//         const formattedUsers = data\r\n//           .filter(user => user.conAccApproved)\r\n//           .map(user => ({\r\n//             name: user.name,\r\n//             email: user.email,\r\n//             number: user.phoneNumber,\r\n//             profession: user.profession || 'N/A',\r\n//             status: user.conAccApproved ? 'Active' : 'Inactive',\r\n//             role: user.role,\r\n//           }));\r\n\r\n//         setUsers(formattedUsers);\r\n//       } catch (error) {\r\n//         console.error('Error fetching active accounts:', error);\r\n//       }\r\n//     };\r\n\r\n//     const fetchTotals = async () => {\r\n//       try {\r\n//         const responses = await Promise.all([\r\n//           fetch('http://localhost:3000/totalActiveUsers'),\r\n//           fetch('http://localhost:3000/totalInactiveUsers'),\r\n//           fetch('http://localhost:3000/totalConsultants'),\r\n//           fetch('http://localhost:3000/totalCustomers')\r\n//         ]);\r\n\r\n//         const [activeData, inactiveData, consultantsData, customersData] = await Promise.all(\r\n//           responses.map(response => response.json())\r\n//         );\r\n\r\n//         setTotalActiveUsers(activeData.totalActiveUsers);\r\n//         setInactiveUsersCount(inactiveData.totalInactiveUsers);\r\n//         setConsultantsCount(consultantsData.totalConsultants);\r\n//         setCustomersCount(customersData.totalCustomers);\r\n//       } catch (error) {\r\n//         console.error('Error fetching totals:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchActiveAccounts();\r\n//     fetchTotals();\r\n//   }, [currentView]);\r\n\r\n//   const handleViewChange = (view) => {\r\n//     setCurrentView(view);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"dashboard\">\r\n//       <Sidebar onMenuClick={handleViewChange} />\r\n//       <div className=\"content\">\r\n//         <div className=\"stat-cards\">\r\n//           <StatCard title=\"Total Active Users\" value={totalActiveUsers} />\r\n//           <StatCard title=\"Total Inactive Users\" value={inactiveUsersCount} />\r\n//           <StatCard title=\"Total Consultants\" value={consultantsCount} />\r\n//           <StatCard title=\"Total Customers\" value={customersCount} />\r\n//         </div>\r\n//         <UserTable \r\n//           users={users} \r\n//           heading={\r\n//             currentView === 'Consultants' \r\n//               ? 'All Consultants' \r\n//               : currentView === 'Inactive Users' \r\n//                 ? 'All Inactive Users' \r\n//                 : 'All Active Users'\r\n//           }\r\n//           buttonLabel={\r\n//             currentView === 'Inactive Users' \r\n//               ? 'Activate' \r\n//               : 'Deactivate'\r\n//           }\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\nimport React, { useState, useEffect } from 'react';\r\nimport Sidebar from '../components/sidebar';\r\nimport StatCard from '../components/statcard';\r\nimport UserTable from '../components/UserTable';\r\nimport './Dashboard.css'; // CSS file for dashboard styling\r\n\r\nconst Dashboard = () => {\r\n  const [currentView, setCurrentView] = useState('Active Users');\r\n  const [users, setUsers] = useState([]);\r\n  const [inactiveUsersCount, setInactiveUsersCount] = useState(0);\r\n  const [consultantsCount, setConsultantsCount] = useState(0);\r\n  const [customersCount, setCustomersCount] = useState(0);\r\n  const [totalActiveUsers, setTotalActiveUsers] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchActiveAccounts = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/activeAccounts');\r\n        const data = await response.json();\r\n        const formattedUsers = data\r\n          .filter(user => user.conAccApproved)\r\n          .map(user => ({\r\n            id: user.id, // Ensure user ID is included\r\n            name: user.name,\r\n            email: user.email,\r\n            number: user.phoneNumber,\r\n            profession: user.profession || 'N/A',\r\n            status: user.conAccApproved ? 'Active' : 'Inactive',\r\n            role: user.role,\r\n          }));\r\n\r\n        setUsers(formattedUsers);\r\n      } catch (error) {\r\n        console.error('Error fetching active accounts:', error);\r\n      }\r\n    };\r\n\r\n    const fetchTotals = async () => {\r\n      try {\r\n        const responses = await Promise.all([\r\n          fetch('http://localhost:3000/totalActiveUsers'),\r\n          fetch('http://localhost:3000/totalInactiveUsers'),\r\n          fetch('http://localhost:3000/totalConsultants'),\r\n          fetch('http://localhost:3000/totalCustomers')\r\n        ]);\r\n\r\n        const [activeData, inactiveData, consultantsData, customersData] = await Promise.all(\r\n          responses.map(response => response.json())\r\n        );\r\n\r\n        setTotalActiveUsers(activeData.totalActiveUsers);\r\n        setInactiveUsersCount(inactiveData.totalInactiveUsers);\r\n        setConsultantsCount(consultantsData.totalConsultants);\r\n        setCustomersCount(customersData.totalCustomers);\r\n      } catch (error) {\r\n        console.error('Error fetching totals:', error);\r\n      }\r\n    };\r\n\r\n    fetchActiveAccounts();\r\n    fetchTotals();\r\n  }, [currentView]);\r\n\r\n  const handleViewChange = (view) => {\r\n    setCurrentView(view);\r\n  };\r\n\r\n  const handleDeactivate = async (Id) => {\r\n    try {\r\n      await fetch(`http://localhost:3000/deactivate/${Id}`, {\r\n        method: 'PATCH' // Assuming POST request for deactivation\r\n      });\r\n      if (response.ok) {\r\n        alert('User activated successfully!');\r\n        // Optionally refetch users or update state\r\n        const updatedUsers = inactiveUsers.filter(user => user.id !== Id);\r\n        setInactiveUsers(updatedUsers);\r\n        // Optionally update totals\r\n      } else {\r\n        alert('Failed to activate user.');\r\n      }\r\n      // Optionally update the UI to reflect the change\r\n      setUsers(users.map(user => \r\n        user.id === Id ? { ...user, status: 'Inactive' } : user\r\n      ));\r\n    } catch (error) {\r\n      console.error('Error deactivating user:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <Sidebar onMenuClick={handleViewChange} />\r\n      <div className=\"content\">\r\n        <div className=\"stat-cards\">\r\n          <StatCard title=\"Total Active Users\" value={totalActiveUsers} />\r\n          <StatCard title=\"Total Inactive Users\" value={inactiveUsersCount} />\r\n          <StatCard title=\"Total Consultants\" value={consultantsCount} />\r\n          <StatCard title=\"Total Customers\" value={customersCount} />\r\n        </div>\r\n        <UserTable \r\n          users={users} \r\n          heading={\r\n            currentView === 'Consultants' \r\n              ? 'All Consultants' \r\n              : currentView === 'Inactive Users' \r\n                ? 'All Inactive Users' \r\n                : 'All Active Users'\r\n          }\r\n          buttonLabel={\r\n            currentView === 'Inactive Users' \r\n              ? 'Activate' \r\n              : 'Deactivate'\r\n          }\r\n          onButtonClick={handleDeactivate} // Pass handleDeactivate to UserTable\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}