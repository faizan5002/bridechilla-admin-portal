{"ast":null,"code":"// // export default UserTable;\n// import React, { useState } from 'react';\n// import './UserTable.css'; // CSS file for user table styling\n// const UserTable = ({ users, heading, buttonLabel, onButtonClick }) => {\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const usersPerPage = 5;\n//   // Filter users based on the search term\n//   const filteredUsers = users.filter((user) =>\n//     user.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n//   // Calculate the total number of pages\n//   const totalPages = Math.ceil(filteredUsers.length / usersPerPage);\n//   // Get the users for the current page\n//   const currentUsers = filteredUsers.slice(\n//     (currentPage - 1) * usersPerPage,\n//     currentPage * usersPerPage\n//   );\n//   const handleSearch = (e) => {\n//     setSearchTerm(e.target.value);\n//     setCurrentPage(1); // Reset to first page when search term changes\n//   };\n//   const handlePageChange = (pageNumber) => {\n//     setCurrentPage(pageNumber);\n//   };\n//   return (\n//     <div className=\"user-table-container\">\n//       <div className=\"header\">\n//         <h2>{heading}</h2> {/* Dynamic heading */}\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search by name\"\n//           value={searchTerm}\n//           onChange={handleSearch}\n//           className=\"search-bar\"\n//         />\n//       </div>\n//       <table className=\"user-table\">\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Email</th>\n//             <th>Number</th>\n//             <th>Profession</th>\n//             <th>Status</th>\n//             <th>Role</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {currentUsers.map((user) => (\n//             <tr key={user.id}> {/* Use user.id as the key */}\n//               <td>{user.name}</td>\n//               <td>{user.email}</td>\n//               <td>{user.number}</td>\n//               <td>{user.profession}</td>\n//               <td>{user.status}</td>\n//               <td>{user.role}</td>\n//               <td>\n//                 <button\n//                   onClick={() => onButtonClick(user.id)} // Call onButtonClick with user.id\n//                   className={buttonLabel === 'Activate' ? 'activate-btn' : 'deactivate-btn'}\n//                 >\n//                   {buttonLabel}\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       <div className=\"pagination\">\n//         {Array.from({ length: totalPages }, (_, index) => (\n//           <button\n//             key={index}\n//             onClick={() => handlePageChange(index + 1)}\n//             className={index + 1 === currentPage ? 'active' : ''}\n//           >\n//             {index + 1}\n//           </button>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n// export default UserTable;\nimport React,{useState}from'react';import'./UserTable.css';// CSS file for user table styling\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UserTable=_ref=>{let{users,heading,buttonLabel,onButtonClick}=_ref;const[searchTerm,setSearchTerm]=useState('');const[currentPage,setCurrentPage]=useState(1);const usersPerPage=5;// Filter users based on the search term\nconst filteredUsers=users.filter(user=>user.name.toLowerCase().includes(searchTerm.toLowerCase()));// Calculate the total number of pages\nconst totalPages=Math.ceil(filteredUsers.length/usersPerPage);// Get the users for the current page\nconst currentUsers=filteredUsers.slice((currentPage-1)*usersPerPage,currentPage*usersPerPage);const handleSearch=e=>{setSearchTerm(e.target.value);setCurrentPage(1);// Reset to first page when search term changes\n};const handlePageChange=pageNumber=>{setCurrentPage(pageNumber);};return/*#__PURE__*/_jsxs(\"div\",{className:\"user-table-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:heading}),\" \",/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search by name\",value:searchTerm,onChange:handleSearch,className:\"search-bar\"})]}),/*#__PURE__*/_jsxs(\"table\",{className:\"user-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Number\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Profession\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Role\"}),buttonLabel&&/*#__PURE__*/_jsx(\"th\",{children:\"Action\"}),\" \"]})}),/*#__PURE__*/_jsx(\"tbody\",{children:currentUsers.map(user=>/*#__PURE__*/_jsxs(\"tr\",{children:[\" \",/*#__PURE__*/_jsx(\"td\",{children:user.name}),/*#__PURE__*/_jsx(\"td\",{children:user.email}),/*#__PURE__*/_jsx(\"td\",{children:user.number}),/*#__PURE__*/_jsx(\"td\",{children:user.profession}),/*#__PURE__*/_jsx(\"td\",{children:user.status}),/*#__PURE__*/_jsx(\"td\",{children:user.role}),buttonLabel&&/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>onButtonClick&&onButtonClick(user.id),className:buttonLabel==='Activate'?'activate-btn':'deactivate-btn',children:buttonLabel})})]},user.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"pagination\",children:Array.from({length:totalPages},(_,index)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handlePageChange(index+1),className:index+1===currentPage?'active':'',children:index+1},index))})]});};export default UserTable;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","UserTable","_ref","users","heading","buttonLabel","onButtonClick","searchTerm","setSearchTerm","currentPage","setCurrentPage","usersPerPage","filteredUsers","filter","user","name","toLowerCase","includes","totalPages","Math","ceil","length","currentUsers","slice","handleSearch","e","target","value","handlePageChange","pageNumber","className","children","type","placeholder","onChange","map","email","number","profession","status","role","onClick","id","Array","from","_","index"],"sources":["D:/My tasks/admin-dashboard/src/components/UserTable.js"],"sourcesContent":["\r\n// // export default UserTable;\r\n// import React, { useState } from 'react';\r\n// import './UserTable.css'; // CSS file for user table styling\r\n\r\n// const UserTable = ({ users, heading, buttonLabel, onButtonClick }) => {\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const usersPerPage = 5;\r\n\r\n//   // Filter users based on the search term\r\n//   const filteredUsers = users.filter((user) =>\r\n//     user.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n//   );\r\n\r\n//   // Calculate the total number of pages\r\n//   const totalPages = Math.ceil(filteredUsers.length / usersPerPage);\r\n\r\n//   // Get the users for the current page\r\n//   const currentUsers = filteredUsers.slice(\r\n//     (currentPage - 1) * usersPerPage,\r\n//     currentPage * usersPerPage\r\n//   );\r\n\r\n//   const handleSearch = (e) => {\r\n//     setSearchTerm(e.target.value);\r\n//     setCurrentPage(1); // Reset to first page when search term changes\r\n//   };\r\n\r\n//   const handlePageChange = (pageNumber) => {\r\n//     setCurrentPage(pageNumber);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"user-table-container\">\r\n//       <div className=\"header\">\r\n//         <h2>{heading}</h2> {/* Dynamic heading */}\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Search by name\"\r\n//           value={searchTerm}\r\n//           onChange={handleSearch}\r\n//           className=\"search-bar\"\r\n//         />\r\n//       </div>\r\n//       <table className=\"user-table\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Name</th>\r\n//             <th>Email</th>\r\n//             <th>Number</th>\r\n//             <th>Profession</th>\r\n//             <th>Status</th>\r\n//             <th>Role</th>\r\n//             <th>Action</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {currentUsers.map((user) => (\r\n//             <tr key={user.id}> {/* Use user.id as the key */}\r\n//               <td>{user.name}</td>\r\n//               <td>{user.email}</td>\r\n//               <td>{user.number}</td>\r\n//               <td>{user.profession}</td>\r\n//               <td>{user.status}</td>\r\n//               <td>{user.role}</td>\r\n//               <td>\r\n//                 <button\r\n//                   onClick={() => onButtonClick(user.id)} // Call onButtonClick with user.id\r\n//                   className={buttonLabel === 'Activate' ? 'activate-btn' : 'deactivate-btn'}\r\n//                 >\r\n//                   {buttonLabel}\r\n//                 </button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//       <div className=\"pagination\">\r\n//         {Array.from({ length: totalPages }, (_, index) => (\r\n//           <button\r\n//             key={index}\r\n//             onClick={() => handlePageChange(index + 1)}\r\n//             className={index + 1 === currentPage ? 'active' : ''}\r\n//           >\r\n//             {index + 1}\r\n//           </button>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UserTable;\r\nimport React, { useState } from 'react';\r\nimport './UserTable.css'; // CSS file for user table styling\r\n\r\nconst UserTable = ({ users, heading, buttonLabel, onButtonClick }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const usersPerPage = 5;\r\n\r\n  // Filter users based on the search term\r\n  const filteredUsers = users.filter((user) =>\r\n    user.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  // Calculate the total number of pages\r\n  const totalPages = Math.ceil(filteredUsers.length / usersPerPage);\r\n\r\n  // Get the users for the current page\r\n  const currentUsers = filteredUsers.slice(\r\n    (currentPage - 1) * usersPerPage,\r\n    currentPage * usersPerPage\r\n  );\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchTerm(e.target.value);\r\n    setCurrentPage(1); // Reset to first page when search term changes\r\n  };\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-table-container\">\r\n      <div className=\"header\">\r\n        <h2>{heading}</h2> {/* Dynamic heading */}\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by name\"\r\n          value={searchTerm}\r\n          onChange={handleSearch}\r\n          className=\"search-bar\"\r\n        />\r\n      </div>\r\n      <table className=\"user-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Number</th>\r\n            <th>Profession</th>\r\n            <th>Status</th>\r\n            <th>Role</th>\r\n            {buttonLabel && <th>Action</th>} {/* Conditionally render the Action column */}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currentUsers.map((user) => (\r\n            <tr key={user.id}> {/* Use user.id as the key */}\r\n              <td>{user.name}</td>\r\n              <td>{user.email}</td>\r\n              <td>{user.number}</td>\r\n              <td>{user.profession}</td>\r\n              <td>{user.status}</td>\r\n              <td>{user.role}</td>\r\n              {buttonLabel && (\r\n                <td>\r\n                  <button\r\n                    onClick={() => onButtonClick && onButtonClick(user.id)}\r\n                    className={buttonLabel === 'Activate' ? 'activate-btn' : 'deactivate-btn'}\r\n                  >\r\n                    {buttonLabel}\r\n                  </button>\r\n                </td>\r\n              )}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pagination\">\r\n        {Array.from({ length: totalPages }, (_, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handlePageChange(index + 1)}\r\n            className={index + 1 === currentPage ? 'active' : ''}\r\n          >\r\n            {index + 1}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}