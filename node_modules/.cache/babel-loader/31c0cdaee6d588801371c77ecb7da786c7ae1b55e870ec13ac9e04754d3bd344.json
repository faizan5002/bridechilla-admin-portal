{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Switch\\\\Desktop\\\\admin-dashboard\\\\src\\\\components\\\\statcard.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import './StatCard.css'; // CSS file for card styling\n// import icon from '../assets/users.png';\n\n// const StatCard = ({ title, value }) => {\n//   return (\n//     <div className=\"stat-card\">\n//       <h3>{title}</h3>\n//       <img src={icon} className=\"icon\"/>\n//       <p>{value}</p>\n//     </div>\n//   );\n// };\n\n// export default StatCard;\nimport React, { useState, useEffect } from 'react';\nimport Sidebar from '../components/sidebar';\nimport StatCard from '../components/statcard';\nimport UserTable from '../components/UserTable';\nimport './Dashboard.css'; // CSS file for dashboard styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [currentView, setCurrentView] = useState('Active Users'); // State to manage the current view\n  const [users, setUsers] = useState([]); // State to store users fetched from the API\n\n  useEffect(() => {\n    const fetchActiveAccounts = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/activeAccounts');\n        const data = await response.json();\n\n        // Filter and map the data to match the fields required for UserTable\n        const formattedUsers = data.filter(user => user.conAccApproved) // Only include active users\n        .map(user => ({\n          name: user.name,\n          email: user.email,\n          number: user.phoneNumber,\n          profession: user.profession || 'N/A',\n          // Handle missing profession\n          status: user.conAccApproved ? 'Active' : 'Inactive',\n          role: user.role\n        }));\n        setUsers(formattedUsers);\n      } catch (error) {\n        console.error('Error fetching active accounts:', error);\n      }\n    };\n    fetchActiveAccounts();\n  }, [currentView]);\n  const handleViewChange = view => {\n    setCurrentView(view);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onMenuClick: handleViewChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-cards\",\n        children: /*#__PURE__*/_jsxDEV(StatCard, {\n          title: \"Total Active Users\",\n          value: users.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserTable, {\n        users: users,\n        heading: currentView === 'Consultants' ? 'All Consultants' : currentView === 'Inactive Users' ? 'All Inactive Users' : 'All Active Users',\n        buttonLabel: currentView === 'Inactive Users' ? 'Activate' : 'Deactivate'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"nQZaid1zZoc0J61z/3U1muw6utk=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","StatCard","UserTable","jsxDEV","_jsxDEV","Dashboard","_s","currentView","setCurrentView","users","setUsers","fetchActiveAccounts","response","fetch","data","json","formattedUsers","filter","user","conAccApproved","map","name","email","number","phoneNumber","profession","status","role","error","console","handleViewChange","view","className","children","onMenuClick","fileName","_jsxFileName","lineNumber","columnNumber","title","value","length","heading","buttonLabel","_c","$RefreshReg$"],"sources":["C:/Users/Switch/Desktop/admin-dashboard/src/components/statcard.js"],"sourcesContent":["// import React from 'react';\r\n// import './StatCard.css'; // CSS file for card styling\r\n// import icon from '../assets/users.png';\r\n\r\n// const StatCard = ({ title, value }) => {\r\n//   return (\r\n//     <div className=\"stat-card\">\r\n//       <h3>{title}</h3>\r\n//       <img src={icon} className=\"icon\"/>\r\n//       <p>{value}</p>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default StatCard;\r\nimport React, { useState, useEffect } from 'react';\r\nimport Sidebar from '../components/sidebar';\r\nimport StatCard from '../components/statcard';\r\nimport UserTable from '../components/UserTable';\r\nimport './Dashboard.css'; // CSS file for dashboard styling\r\n\r\nconst Dashboard = () => {\r\n  const [currentView, setCurrentView] = useState('Active Users'); // State to manage the current view\r\n  const [users, setUsers] = useState([]); // State to store users fetched from the API\r\n\r\n  useEffect(() => {\r\n    const fetchActiveAccounts = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/activeAccounts');\r\n        const data = await response.json();\r\n        \r\n        // Filter and map the data to match the fields required for UserTable\r\n        const formattedUsers = data\r\n          .filter(user => user.conAccApproved) // Only include active users\r\n          .map(user => ({\r\n            name: user.name,\r\n            email: user.email,\r\n            number: user.phoneNumber,\r\n            profession: user.profession || 'N/A', // Handle missing profession\r\n            status: user.conAccApproved ? 'Active' : 'Inactive',\r\n            role: user.role,\r\n          }));\r\n\r\n        setUsers(formattedUsers);\r\n      } catch (error) {\r\n        console.error('Error fetching active accounts:', error);\r\n      }\r\n    };\r\n\r\n    fetchActiveAccounts();\r\n  }, [currentView]);\r\n\r\n  const handleViewChange = (view) => {\r\n    setCurrentView(view);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <Sidebar onMenuClick={handleViewChange} />\r\n      <div className=\"content\">\r\n        <div className=\"stat-cards\">\r\n          <StatCard title=\"Total Active Users\" value={users.length} />\r\n          {/* Other StatCards can be added similarly */}\r\n        </div>\r\n        <UserTable \r\n          users={users} \r\n          heading={\r\n            currentView === 'Consultants' \r\n              ? 'All Consultants' \r\n              : currentView === 'Inactive Users' \r\n                ? 'All Inactive Users' \r\n                : 'All Active Users'\r\n          }\r\n          buttonLabel={\r\n            currentView === 'Inactive Users' \r\n              ? 'Activate' \r\n              : 'Deactivate'\r\n          }\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}